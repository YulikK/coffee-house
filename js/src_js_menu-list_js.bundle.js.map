{"version":3,"file":"js/src_js_menu-list_js.bundle.js","mappings":"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A;AACA;AACA,wBAAwB,SAAS,oEAAoE,SAAS,IAAI,QAAQ;AAC1H,yBAAyB,SAAS;AAClC,sCAAsC,SAAS;AAC/C,uCAAuC,KAAK;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,MAAM;AACf;AACA;AACA;AACA,6BAA6B,KAAK,4EAA4E,SAAS;AACvH,8BAA8B,KAAK;AACnC,sCAAsC,MAAM;AAC5C,uCAAuC,KAAK;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,6DAA6D;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD,SAAS,GAAG,MAAM,sCAAsC,KAAK;AACrH;AACA;AACA;AACA,2CAA2C,KAAK;AAChD,iDAAiD,YAAY;AAC7D;AACA,YAAY;AACZ,YAAY;AACZ;AACA;AACA,2DAA2D,MAAM;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,8BAA8B,oDAAY;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/IyC;;AAElC;AACP,SAAS,2CAA2C;;AAEpD;AACA;AACA;AACA,gDAAgD,SAAS,GAAG,MAAM,sCAAsC,KAAK;AAC7G;AACA;AACA,iCAAiC,KAAK;AACtC,uCAAuC,YAAY;AACnD,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;;AAEe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzCyC;AACF;;AAEvC;AACA;AACA;AACA;AACA,qIAAqI,iDAAU,QAAQ;AACvJ,+HAA+H,iDAAU,QAAQ;AACjJ,4DAA4D,iDAAU,QAAQ;AAC9E;AACA;AACA;AACA,2GAA2G,iDAAU,KAAK;AAC1H,yHAAyH,iDAAU,KAAK;AACxI,4DAA4D,iDAAU,KAAK;AAC3E;AACA;AACA;AACA,+GAA+G,iDAAU,SAAS;AAClI,+HAA+H,iDAAU,SAAS;AAClJ,4DAA4D,iDAAU,SAAS;AAC/E;AACA;AACA;AACA;AACA;AACA;;AAEe,qBAAqB,oDAAY;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClDyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,oDAAY;;AAElD;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACfyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEe,0BAA0B,oDAAY;;AAErD;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACfyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6BAA6B,oDAAY;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://coffee-house/./src/js/const.js","webpack://coffee-house/./src/js/menu-list.js","webpack://coffee-house/./src/js/model/menu.js","webpack://coffee-house/./src/js/presenter/menu-list.js","webpack://coffee-house/./src/js/utils/render.js","webpack://coffee-house/./src/js/view/abstract.js","webpack://coffee-house/./src/js/view/card-details.js","webpack://coffee-house/./src/js/view/card.js","webpack://coffee-house/./src/js/view/filter.js","webpack://coffee-house/./src/js/view/menu-list.js","webpack://coffee-house/./src/js/view/menu-section.js","webpack://coffee-house/./src/js/view/show-more-button.js"],"sourcesContent":["export const CARD_COUNT_PER_STEP_DESKTOP = 50;\nexport const CARD_COUNT_PER_STEP_TABLET = 4;\nexport const FilterType = {\n  COFFEE: `coffee`,\n  TEA: `tea`,\n  DESSERT: `dessert`\n};\nexport const MenuType = {\n  DESKTOP: `desktop`,\n  MOBILE: `mobile`\n};\nexport const tabletWidth = '768px';\nexport const tabletWidthCount = 768;","import mockFile from '../mock/products.json';\nimport MenuModel from \"./model/menu.js\";\nimport MenuListPresenter from \"./presenter/menu-list.js\";\nimport {MenuType, tabletWidthCount} from \"./const.js\"\n\nconst menuModel = new MenuModel();\nconst siteBodyElement = document.querySelector(`body`);\nconst pageMainElement = siteBodyElement.querySelector(`.page-menu`);\nconst filterContainerElement = siteBodyElement.querySelector(`.page-menu__wrapper`);\nconst screenWidth = window.screen.width\nlet currentMenuType = screenWidth > tabletWidthCount ? MenuType.DESKTOP : MenuType.MOBILE;\n\nif (pageMainElement !== null) {\n  const initMenuData = (data) => {\n    const dataCard = data.map(menuModel.adaptToClient);\n    menuModel.setMenu(dataCard);\n  };\n\n  function onResize(){\n    if(window.screen.width <= tabletWidthCount && currentMenuType === MenuType.DESKTOP) {\n      currentMenuType = MenuType.MOBILE;\n      menuListPresenter.setMenuType(currentMenuType);\n      menuListPresenter.update();\n    } else if (window.screen.width > tabletWidthCount && currentMenuType === MenuType.MOBILE) {\n      currentMenuType = MenuType.DESKTOP;\n      menuListPresenter.setMenuType(currentMenuType);\n      menuListPresenter.update();\n    }\n  }\n   \n\n  initMenuData(mockFile);\n\n  const menuListPresenter = \n  new MenuListPresenter(pageMainElement, \n    filterContainerElement, \n    pageMainElement,\n    currentMenuType\n    );\n  menuListPresenter.init(menuModel.getMenu());\n  window.addEventListener('resize', onResize);\n}\n","export default class Menu{\n  constructor() {\n    this._cards = [];\n  }\n\n  setMenu(cards) {\n    this._cards = cards.slice();\n  }\n\n  getMenu() {\n    return this._cards;\n  }\n\n  adaptToClient(card) {\n    const adaptedCard = Object.assign(\n        {},\n        card,\n        {\n          name: card.name,\n          description: card.description,\n          price: card.price,\n          category: card.category,\n          photo: card.photo,\n          sizes: card.sizes,\n          additives: card.additives,\n        }\n    );\n    return adaptedCard;\n\n  }\n}\n","import {CARD_COUNT_PER_STEP_DESKTOP, CARD_COUNT_PER_STEP_TABLET, tabletWidth} from \"../const.js\";\nimport FilterView from \"../view/filter.js\";\nimport MenuCardView from \"../view/card.js\";\nimport MenuListView from \"../view/menu-list.js\";\nimport MenuSectionView from \"../view/menu-section.js\";\nimport ShowMoreButtonView from \"../view/show-more-button.js\";\nimport MenuCardDetailsView from \"../view/card-details.js\";\nimport {render, hideDetails, showDetails, remove} from \"../utils/render.js\";\nimport {FilterType, MenuType} from \"../const.js\";\n\nexport default class MenuList {\n  constructor(menuContainer, filterContainer, menuDetailsContainer, currentMenuType) {\n    this._menuContainer = menuContainer;\n    this._filterContainer = filterContainer;\n    this._menuDetailsContainer = menuDetailsContainer;\n    this._menuListComponent = new MenuListView();\n    this._menuContainerComponent = new MenuSectionView();\n    this._showMoreButtonComponent = new ShowMoreButtonView();\n    this._filterComponent = new FilterView();\n    this._currentMenuType = currentMenuType;\n    if(this._currentMenuType == MenuType.MOBILE) {\n      this._cardStep = CARD_COUNT_PER_STEP_TABLET;\n    } else {\n      this._cardStep = CARD_COUNT_PER_STEP_DESKTOP;\n    }\n    this._renderedMenuCount = this._cardStep;\n    this._currentFilterType = FilterType.COFFEE;\n\n    this._handleShowMoreButtonClick = this._handleShowMoreButtonClick.bind(this);\n    this._handleFilterTypeChange = this._handleFilterTypeChange.bind(this);\n  }\n\n  init(menu) {\n    this._boardMenu = menu.slice();\n    this._sourcedBoardMenu = menu.slice();\n\n    this._renderFilter();\n\n    render(this._menuContainer, this._menuContainerComponent);\n    render(this._menuContainerComponent, this._menuListComponent);\n\n    this._renderMenuList();\n  }\n  setMenuType(type) {\n    this._currentMenuType = type;\n    if(this._currentMenuType == MenuType.MOBILE) {\n      this._cardStep = CARD_COUNT_PER_STEP_TABLET;\n    } else {\n      this._cardStep = CARD_COUNT_PER_STEP_DESKTOP;\n    }\n  }\n\n  update(){\n    this._clearMenuList();\n    remove(this._showMoreButtonComponent);\n    this._renderMenuList();\n  }\n\n  _filterMenu(filterType) {\n    switch (filterType) {\n      case FilterType.COFFEE:\n        this._boardMenu = this._sourcedBoardMenu.filter((card) => card.category == \"coffee\");\n        break;\n      case FilterType.TEA:\n        this._boardMenu = this._sourcedBoardMenu.filter((card) => card.category == \"tea\");\n        break;\n        case FilterType.DESSERT:\n        this._boardMenu = this._sourcedBoardMenu.filter((card) => card.category == \"dessert\");\n        break;\n    }\n\n    this._currentFilterType = filterType;\n  }\n\n  _setActiveFilterElement(filterType) {\n    const filterComponent = this._filterComponent.getElement();\n    const oldFilterElement = filterComponent.querySelector(`a[data-filter-type=\"${this._currentFilterType}\"]`);\n    const newFilterElement = filterComponent.querySelector(`a[data-filter-type=\"${filterType}\"]`);\n    oldFilterElement.classList.remove(`button__filter--active`);\n    newFilterElement.classList.add(`button__filter--active`);\n  }\n\n  _handleFilterTypeChange(filterType) {\n    if (this._currentFilterType === filterType) {\n      return;\n    }\n\n    this._setActiveFilterElement(filterType);\n    this._filterMenu(filterType);\n    this._clearMenuList();\n    this._renderMenuList();\n  }\n\n  _renderFilter() {\n    this._filterMenu(this._currentFilterType);\n    render(this._filterContainer, this._filterComponent);\n    this._filterComponent.setFilterTypeChangeHandler(this._handleFilterTypeChange);\n  }\n\n  _renderMenuCard(menuCard) {\n    const menuCardComponent = new MenuCardView(menuCard);\n    const menuCardDetailsComponent = new MenuCardDetailsView(menuCard);\n\n    const onEscKeyDown = (evt) => {\n      if (evt.key === `Escape` || evt.key === `Esc`) {\n        evt.preventDefault();\n        hideDetails(this._menuDetailsContainer, menuCardDetailsComponent);\n        document.removeEventListener(`keydown`, onEscKeyDown);\n      }\n    };\n\n    const onMenuCardClick = () => {\n      showDetails(this._menuDetailsContainer, menuCardDetailsComponent);\n      document.addEventListener(`keydown`, onEscKeyDown);\n    };\n\n    const onCloseButtonClick = () => {\n      hideDetails(this._menuDetailsContainer, menuCardDetailsComponent);\n      document.removeEventListener(`keydown`, onEscKeyDown);\n    };\n\n    menuCardComponent.setMenuCardClickHandler(onMenuCardClick);\n    menuCardDetailsComponent.setCloseClickHandler(onCloseButtonClick);\n    menuCardDetailsComponent.setControllerClickHandler(onCloseButtonClick);\n    render(this._menuListComponent, menuCardComponent);\n  }\n\n  _renderMenuCards(from, to) {\n    this._boardMenu\n      .slice(from, to)\n      .forEach((boardMenu) => this._renderMenuCard(boardMenu));\n  }\n\n  _handleShowMoreButtonClick() {\n    this._renderMenuCards(this._renderedMenuCount, this._renderedMenuCount + this._cardStep);\n    this._renderedMenuCount += this._cardStep;\n    if (this._renderedMenuCount >= this._boardMenu.length) {\n      remove(this._showMoreButtonComponent);\n    }\n\n  }\n\n  _renderShowMoreButton() {\n    render(this._menuContainerComponent, this._showMoreButtonComponent);\n    this._showMoreButtonComponent.setClickHandler(this._handleShowMoreButtonClick);\n  }\n\n  _clearMenuList() {\n    this._menuListComponent.getElement().innerHTML = ``;\n    this._renderedMenuCount = this._cardStep;\n    remove(this._showMoreButtonComponent);\n  }\n\n  _renderMenuList() {\n    this._renderMenuCards(0, Math.min(this._boardMenu.length, this._cardStep));\n    if (this._boardMenu.length > this._cardStep) {\n      this._renderShowMoreButton();\n    }\n  }\n}\n","import Abstract from \"../view/abstract.js\";\n\nexport const render = (container, child) => {\n\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  container.append(child);\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nconst onScrollBody = () =>{\n  const bodyElement = document.querySelector(`body`);\n  bodyElement.classList.remove(`body--no-scroll`);\n}\n\nconst offScrollBody = () =>{\n  const bodyElement = document.querySelector(`body`);\n  bodyElement.classList.add(`body--no-scroll`);\n}\n\nexport const showDetails = (container, detailsComponent) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n  if (detailsComponent instanceof Abstract) {\n    detailsComponent = detailsComponent.getElement();\n  }\n  container.appendChild(detailsComponent);\n  // container.classList.add(`hide-overflow`);\n  offScrollBody();\n};\n\nexport const hideDetails = (container, detailsComponent) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n  if (detailsComponent instanceof Abstract) {\n    detailsComponent = detailsComponent.getElement();\n  }\n  container.removeChild(detailsComponent);\n  onScrollBody();\n  // container.classList.remove(`hide-overflow`);\n};\n\nexport const remove = (component) => {\n  if (component === null) {\n    return;\n  }\n\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};","import {createElement} from \"../utils/render.js\";\n\nconst SHAKE_ANIMATION_TIMEOUT = 600;\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n    this._element = null;\n    this._callback = {};\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  shake(callback) {\n    this.getElement().style.animation = `shake ${SHAKE_ANIMATION_TIMEOUT / 1000}s`;\n    setTimeout(() => {\n      this.getElement().style.animation = ``;\n      callback();\n    }, SHAKE_ANIMATION_TIMEOUT);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createSizeTemplate = (sizeName, sizeProp, checked) => {\n  const {size} = sizeProp\n  const addPrice = sizeProp.add_price;\n  return (\n    `<li class=\"control__item\">\n      <input id=\"size-${sizeName}\" type=\"radio\" name=\"size\" class=\"control__input\" data-price-add=\"${addPrice}\" ${checked}>\n      <label for=\"size-${sizeName}\" class=\"control__button button button__control button__control--active\">\n        <span class=\"control__mark\">${sizeName}</span>\n        <span class=\"control__title\">${size}</span>\n      </label>\n    </li>`\n  );\n\n};\nconst createSizesTemplate = (sizes) => {\n  const sizeTemplateS = createSizeTemplate('S', sizes.s, 'checked');\n  const sizeTemplateM = createSizeTemplate('M', sizes.m, '');\n  const sizeTemplateL = createSizeTemplate('L', sizes.l, '');\n  return (\n    `<div class=\"card-modal__controller-wrapper control\">\n      <p class=\"control__caption\">Size</p>\n      <div class=\"control__wrapper\">\n        <ul class=\"control__list\">\n          ${sizeTemplateS}\n          ${sizeTemplateM}\n          ${sizeTemplateL}\n        </ul>\n      </div>\n    </div>`\n  );\n\n};\n\nconst createAdditiveTemplate = (index, additive) => {\n  const {name} = additive;\n  const addPrice = additive.add_price;\n  return (\n    `<li class=\"control__item\">\n      <input id=\"additives-${name}\" type=\"checkbox\" name=\"additives\" class=\"control__input\" data-price-add=\"${addPrice}\">\n      <label for=\"additives-${name}\" class=\"control__button button button__control button__control--active\">\n        <span class=\"control__mark\">${index}</span>\n        <span class=\"control__title\">${name}</span>\n      </label>\n    </li>`\n  );\n\n};\n\nconst createAdditivesTemplate = (additives) => {\n  const additiveTemplate = additives\n  .map((additive, index) => createAdditiveTemplate(index + 1, additive))\n  .join(``);\n  return (\n    `<div class=\"card-modal__controller-wrapper control control--additives-coffee control--active\">\n      <p class=\"control__caption\">Additives</p>\n      <div class=\"control__wrapper\">\n        <ul class=\"control__list\">\n          ${additiveTemplate}\n        </ul>\n      </div>\n    </div>`\n  );\n\n};\n\nconst createMenuCardDetailsTemplate = (menuCard) => {\n  const {name, description, price, photo, category, sizes, additives} = menuCard;\n  const sizesTemplate = createSizesTemplate(sizes);\n  const additivesTemplate = createAdditivesTemplate(additives);\n\n  return (\n    `<section class=\"card-modal\">\n      <div class=\"card-modal__wrapper\">\n        <div class=\"card-modal__image-wrapper\">\n          <img class=\"card-modal__image\" src=\"img/png/${category}-${photo}.png\" width=\"340\" height=\"340\" alt=\"${name}\">\n        </div>\n        <div class=\"card-modal__information-wrapper\">\n          <div class=\"card-modal__caption-wrapper\">\n            <h3 class=\"card-modal__name\">${name}</h3>\n            <p class=\"card-modal__description\">${description}</p>\n          </div>\n          ${sizesTemplate}\n          ${additivesTemplate} \n          <div class=\"card-modal__price-wrapper price\">\n            <p class=\"card-modal__price\">Total:</p>\n            <p class=\"card-modal__price price__current\">$${price}</p>\n          </div>\n          <div class=\"card-modal__alert\">\n            <img class=\"card-modal__alert-icon\" src=\"img/svg/info-empty.svg\" width=\"16\" height=\"16\" alt=\"alert information\">\n            <p class=\"card-modal__alert-information\">The cost is not final. Download our mobile app to see the final price and place your order. Earn loyalty points and enjoy your favorite coffee with up to 20% discount.</p>\n          </div>\n          <a class=\"card-modal__button button button__close-modal\">Close</a>\n        </div>\n      </div>\n    </section>`);\n};\n\nexport default class MenuCardDetails extends AbstractView {\n  constructor(menuCard) {\n    super();\n    this._menuCard = menuCard;\n    this._closeClickHandler = this._closeClickHandler.bind(this);\n    this._controllerClickHandler = this._controllerClickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createMenuCardDetailsTemplate(this._menuCard);\n  }\n\n  _closeClickHandler(evt) {\n    if (!evt.target.classList.contains('button__close-modal') && !evt.target.classList.contains('card-modal')){\n      return;\n    }\n    evt.preventDefault();\n    this._callback.editClick();\n    evt.stopPropagation();\n  }\n\n  _controllerClickHandler(evt) {\n    let newPrice = Number(this._menuCard.price);\n    const controlItemsChecked = this.getElement().querySelectorAll(`input[class=control__input]:checked`);\n    controlItemsChecked\n    .forEach((controlItem) => {\n      newPrice += Number(controlItem.getAttribute('data-price-add'));\n    });\n    this.getElement().querySelector(`.price__current`).textContent = '$' + newPrice.toFixed(2);\n  }\n\n  setCloseClickHandler(callback) {\n    this._callback.editClick = callback;\n    this.getElement().querySelector(`.button__close-modal`).addEventListener(`click`, this._closeClickHandler);\n    this.getElement().addEventListener(`click`, this._closeClickHandler);\n  }\n\n  setControllerClickHandler(callback) {\n    this._callback.editClick = callback;\n    const controlItems = this.getElement().querySelectorAll(`input[class=control__input]`);\n    controlItems\n    .forEach((controlItem) => controlItem.addEventListener(`click`, this._controllerClickHandler));\n    \n  }\n}\n\n","import AbstractView from \"./abstract.js\";\n\nexport const createCardMenuTemplate = (menuCard) => {\n  const {name, description, price, photo, category} = menuCard;\n\n  return (\n    `<li class=\"menu__item card\">\n      <div class=\"card__image-wrapper\">\n        <img class=\"card__image\" src=\"img/png/${category}-${photo}.png\" width=\"340\" height=\"340\" alt=\"${name}\">\n      </div>\n      <div class=\"card__information-wrapper\">\n        <h3 class=\"card__name\">${name}</h3>\n        <p class=\"card__description\">${description}</p>\n        <p class=\"card__price\">$${price}</p>\n      </div>\n    </li>`\n  );\n};\n\nexport default class CardMenu extends AbstractView {\n  constructor(cardMenu) {\n    super();\n    this._cardMenu = cardMenu;\n    this._cardMenuClickHandler = this._cardMenuClickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createCardMenuTemplate(this._cardMenu);\n  }\n\n  setMenuCardClickHandler(callback) {\n    this._callback.cardMenuClick = callback;\n    this.getElement().addEventListener(`click`, this._cardMenuClickHandler);\n  }\n\n\n  _cardMenuClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.cardMenuClick();\n  }\n\n}","import AbstractView from \"./abstract.js\";\nimport {FilterType} from \"../const.js\";\n\nconst createFilterTemplate = () => {\n  return (\n    `<ul class=\"page-menu__filter filter\">\n        <li class=\"filter__item\">\n          <a href=\"#\" class=\"filter__button button button__filter button__filter--coffee button__filter--active\" data-filter-type=\"${FilterType.COFFEE}\">\n            <img class=\"filter__icon\" src=\"img/svg/coffee.svg\" width=\"16\" height=\"24\" alt=\"filter: coffee\" data-filter-type=\"${FilterType.COFFEE}\">\n            <span class=\"filter__title\" data-filter-type=\"${FilterType.COFFEE}\">Coffee</span>\n          </a>\n        </li>\n        <li class=\"filter__item\">\n          <a href=\"#\" class=\"filter__button button button__filter button__filter--tea\" data-filter-type=\"${FilterType.TEA}\">\n            <img class=\"filter__icon\" src=\"img/svg/tea.svg\" width=\"16\" height=\"24\" alt=\"filter: tea\" data-filter-type=\"${FilterType.TEA}\">\n            <span class=\"filter__title\" data-filter-type=\"${FilterType.TEA}\">Tea</span>\n          </a>\n        </li>\n        <li class=\"filter__item\">\n          <a href=\"#\" class=\"filter__button button button__filter button__filter--dessert\" data-filter-type=\"${FilterType.DESSERT}\">\n            <img class=\"filter__icon\" src=\"img/svg/desert.svg\" width=\"16\" height=\"24\" alt=\"filter: desert\" data-filter-type=\"${FilterType.DESSERT}\">\n            <span class=\"filter__title\" data-filter-type=\"${FilterType.DESSERT}\">Dessert</span>\n          </a>\n        </li>\n      </ul>\n    </div>`\n  );\n};\n\nexport default class Filter extends AbstractView {\n  constructor() {\n    super();\n\n    this._filterTypeChangeHandler = this._filterTypeChangeHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilterTemplate();\n  }\n\n  _filterTypeChangeHandler(evt) {\n\n    evt.preventDefault();\n    this._callback.filterTypeChange(evt.target.dataset.filterType);\n  }\n\n  setFilterTypeChangeHandler(callback) {\n    this._callback.filterTypeChange = callback;\n    this.getElement().addEventListener(`click`, this._filterTypeChangeHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createMenuListTemplate = () => {\n  return (\n    `<ul class=\"menu__list menu__list--coffee menu__list--active\">\n    </ul>`\n  );\n};\n\nexport default class MenuList extends AbstractView {\n\n  getTemplate() {\n    return createMenuListTemplate();\n  }\n\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createMenuSectionTemplate = () => {\n  return (\n    `<section class=\"menu\">\n    </section>`\n  );\n};\n\nexport default class MenuSection extends AbstractView {\n\n  getTemplate() {\n    return createMenuSectionTemplate();\n  }\n\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createShowMoreButtonTemplate = () => {\n  return (\n    `<a class=\"menu__refresh button button__refresh\">\n      <svg id=\"refresh\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path id=\"Ellipse\" d=\"M21.8883 13.5C21.1645 18.3113 17.013 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C16.1006 2 19.6248 4.46819 21.1679 8\" stroke=\"#403F3D\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path id=\"Ellipse_2\" d=\"M17 8H21.4C21.7314 8 22 7.73137 22 7.4V3\" stroke=\"#403F3D\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n    </a>`\n  );\n};\n\nexport default class ShowMoreButton extends AbstractView {\n  constructor() {\n    super();\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createShowMoreButtonTemplate();\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().addEventListener(`click`, this._clickHandler);\n  }\n}\n"],"names":[],"sourceRoot":""}